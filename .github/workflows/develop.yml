# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven

on:
  push:
    branches: [ develop ]
  pull_request:
    branches: [ develop ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 17
        uses: actions/setup-java@v1
        with:
          java-version: 17
      - name: Checkstyle with Maven
        run: mvn -B versions:update-parent validate compile --file pom.xml
#        Not Required for now. when we need docker enable
#      - name: Build the docker-compose stack
#        run: docker-compose up -d
      - name: Test with Maven
        run: mvn -B jacoco:prepare-agent install jacoco:report -Pprod --file pom.xml
      - name: Copy Artifacts
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          #           port: ${{ secrets.PORT }}
          key: ${{ secrets.KEY }}
          source: "gurukulams-web/target/*.jar"
          target: ${{ secrets.TARGET_DIR }}
          strip_components: 1
      - name: Deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.KEY }}
          target: ${{ secrets.TARGET_DIR }}
          script:
            echo "cd ${{ secrets.TARGET_DIR }} && sudo kill $(ps -ef | grep java | grep -v grep | awk '{print $2}') || true && sudo nohup ${{ secrets.SOFTWARES_DIR }}/jre/bin/java -jar target/gurukulams-web-*.jar >/dev/null 2>&1 &" > deploy.sh && sh deploy.sh &
